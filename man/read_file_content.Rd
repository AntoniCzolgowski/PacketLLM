% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file_utils.R
\name{read_file_content}
\alias{read_file_content}
\title{Read file content}
\usage{
read_file_content(file_path, pages = NULL)
}
\arguments{
\item{file_path}{Character string. Path to the file.}

\item{pages}{Optional. A numeric vector specifying which pages (for PDF) should be read.}
}
\value{
A character string containing the file content.
}
\description{
This function reads the content of a file with the extension .R, .pdf, or .docx
and returns it as a single character string.
For PDF files, if the \code{pages} parameter is provided, only the selected pages will be read.
}
\examples{
# --- Example for reading an R file ---
# Create a temporary R file
temp_r_file <- tempfile(fileext = ".R")
writeLines(c("x <- 1", "print(x + 1)"), temp_r_file)

# Read the content
r_content <- read_file_content(temp_r_file)
print(r_content)

# Clean up the temporary file
unlink(temp_r_file)

# --- Example for reading a text file (simulates basic docx/pdf content) ---
temp_txt_file <- tempfile(fileext = ".txt")
# Simulate a docx by saving as txt and renaming (for example purposes only)
temp_docx_sim_file <- sub("\\\\.txt$", ".docx", temp_txt_file)
writeLines(c("This is the first line.", "This is the second line."), temp_txt_file)
file.rename(temp_txt_file, temp_docx_sim_file)

# Reading requires the 'readtext' package for .docx
if (requireNamespace("readtext", quietly = TRUE)) {
  docx_content <- tryCatch({
    read_file_content(temp_docx_sim_file)
  }, error = function(e) {
    # Handle cases where readtext might fail even if installed
    paste("Could not read simulated DOCX:", e$message)
  })
  print(docx_content)
} else {
  print("Skipping DOCX example: 'readtext' package not installed.")
}

# Clean up
unlink(temp_docx_sim_file, force = TRUE) # Use force if rename was tricky

# --- Example for PDF (requires pdftools, only run if installed) ---
\dontrun{
# This part requires the 'pdftools' package and a valid PDF file.
# For a runnable example, you might need to include a small sample PDF
# in your package's inst/extdata directory and use system.file().

# Example assuming you have a PDF at 'path/to/your/file.pdf'
# pdf_path <- "path/to/your/file.pdf"
# if (file.exists(pdf_path) && requireNamespace("pdftools", quietly = TRUE)) {
#   # Read all pages
#   pdf_content_all <- read_file_content(pdf_path)
#   print(substr(pdf_content_all, 1, 100)) # Print first 100 chars
#
#   # Read specific pages (e.g., page 1)
#   pdf_content_page1 <- read_file_content(pdf_path, pages = 1)
#   print(pdf_content_page1)
# } else {
#   print("Skipping PDF example: 'pdftools' not installed or file not found.")
# }
}
}
